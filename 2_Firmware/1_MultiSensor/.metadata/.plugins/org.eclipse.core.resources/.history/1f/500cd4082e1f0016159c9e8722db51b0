 /*            #                                                   
             #@#@                                                   
          @@@#@@@                                                   
          @ `@@                                                     
          @@                                                        
          @@@                                                       
      .    @@                                                       
     @@@@. @@    @@          @@        @@,@;       @@  :@@@@@@@     
    @@@@@@@'@   @@@          #@`      '@  @@       @@  :@   .@@@.   
    @@@@@@@ @:  @@@           @@      @@  @@      `@:  :@`     @@   
    @@@@@@@@@@@@@@@           @@      @+  .@'     @@   :@`      @@  
    @@@@@@@@@@@@@@@           +@`    +@    @@     @@   :@`      @@  
    @@@@@@@@@@@@@@@            @@    @@    @@    `@.   :@`      @@  
    @@@@@@@@@@@@@@@            @@    @'     @#   @@    :@`      #@  
    @@@@@@@@@@@@@@@,           ;@.  +@      @@   @@    :@`      @@  
   @@@@@@@@@@@@@@@@@            @@  @@      #@  `@`    :@`      @@  
   @@@@@@@@@@@@@@@@@@           @@  @:       @# @@     :@`      @@  
  '@@@@@@@@@@@@@@@@@@           ,@,+@        @@ @@     :@`     ;@+  
  '@@@@+@@@@@@@@@@@@@            @@@@        +@`@      :@`    ,@@   
   @@@  @@@@@@ @@@@@#            @@@.         @@@      :@@@@@@@@    
        @@@@@@  :+:              `@@          @@+      `@@@@@@      
        @@@@@@                                                      
        @@@@@@                                                      
 */

/**
 * Valere Versnip Design 
 *
 * @project MultiSensor_bsp
 * @file lowleveldriversconfig.h
 * @author TimB
 * @date 16-mei-2016
 * @brief	Configuration parameters for all lowleveldriver structs.
 *
 */

#ifndef DEF_lowleveldriversconfig_H
#define DEF_lowleveldriversconfig_H

/* ***********************************************************************************************************************************************
 * Include Files
 * ***********************************************************************************************************************************************
 */


/*
 * ***********************************************************************************************************************************************
 * Defines
 * ***********************************************************************************************************************************************
 */

/*
 * SYSTICK low level startup values
 * ***********************************************************
 */
#define LOWLEVELDRIVERSCONFIG_SYSTICK_RATE						1000							/**< systemtick counter increments every ms (1/1000) DO NOT CHANGE THIS!!!*/
//#define LOWLEVELDRIVERSCONFIG_SYSTICK_INTR_FUNCTION			HIGHLEVELDRIVERS_Heartbeat		/**< name of the void function(void) user function which will be called by systick timer, uncomment if used */

/* do not modify under this line */
/* ******************************************************************************* */
#ifdef LOWLEVELDRIVERSCONFIG_SYSTICK_INTR_FUNCTION
extern void LOWLEVELDRIVERSCONFIG_SYSTICK_INTR_FUNCTION(void);
#define LOWLEVELDRIVERSCONFIG_SYSTICK_INTRHANDLER			&LOWLEVELDRIVERSCONFIG_SYSTICK_INTR_FUNCTION		/**< Pointer to the high level Systick handler */
#else
#define LOWLEVELDRIVERSCONFIG_SYSTICK_INTRHANDLER			NULL
#endif
/* do not modify above this line */
/* ******************************************************************************* */


/*
 * MRT low level startup values
 * ***********************************************************
 */
/*
 * mrt0 low level startup values
 * ***********************************************************
 */
#define LOWLEVELDRIVERSCONFIG_MRT_0_ENABLE					true							/**< this timer is enabled */
#define LOWLEVELDRIVERSCONFIG_MRT_0_ENABLEINTERRUPT			true							/**< interrupts enabled for this timer */
#define LOWLEVELDRIVERSCONFIG_MRT_0_INTERRUPTFREQ			20000							/**< 20000 --> 50uS */
//#define LOWLEVELDRIVERSCONFIG_MRT_0_INTR_FUNCTION											/**< Define if higherlevel interrupt handler should be specified */

/* do not modify under this line */
/* ******************************************************************************* */
#ifdef LOWLEVELDRIVERSCONFIG_MRT_0_INTR_FUNCTION
extern void LOWLEVELDRIVERSCONFIG_MRT_0_INTR_FUNCTION(void);
#define LOWLEVELDRIVERSCONFIG_MRT_0_INTRHANDLER			&LOWLEVELDRIVERSCONFIG_MRT_0_INTR_FUNCTION		/**< Pointer to the high level TIMER16_0 handler */
#else
#define LOWLEVELDRIVERSCONFIG_MRT_0_INTRHANDLER			NULL
#endif
/* do not modify above this line */
/* ******************************************************************************* */

/*
 * mrt1 low level startup values
 * ***********************************************************
 */
#define LOWLEVELDRIVERSCONFIG_MRT_1_ENABLE					false							/**< this timer is disabled */
#define LOWLEVELDRIVERSCONFIG_MRT_1_ENABLEINTERRUPT			false							/**< interrupts disabled for this timer */
#define LOWLEVELDRIVERSCONFIG_MRT_1_INTERRUPTFREQ			20000							/**< 20000 --> 50uS */
//#define LOWLEVELDRIVERSCONFIG_MRT_1_INTR_FUNCTION											/**< Define if higherlevel interrupt handler should be specified */

/* do not modify under this line */
/* ******************************************************************************* */
#ifdef LOWLEVELDRIVERSCONFIG_MRT_1_INTR_FUNCTION
extern void LOWLEVELDRIVERSCONFIG_MRT_1_INTR_FUNCTION(void);
#define LOWLEVELDRIVERSCONFIG_MRT_1_INTRHANDLER			&LOWLEVELDRIVERSCONFIG_MRT_1_INTR_FUNCTION		/**< Pointer to the high level TIMER16_0 handler */
#else
#define LOWLEVELDRIVERSCONFIG_MRT_1_INTRHANDLER			NULL
#endif
/* do not modify above this line */
/* ******************************************************************************* */

/*
 * mrt2 low level startup values
 * ***********************************************************
 */
#define LOWLEVELDRIVERSCONFIG_MRT_2_ENABLE					false							/**< this timer is disabled */
#define LOWLEVELDRIVERSCONFIG_MRT_2_ENABLEINTERRUPT			false							/**< interrupts disabled for this timer */
#define LOWLEVELDRIVERSCONFIG_MRT_2_INTERRUPTFREQ			20000							/**< 20000 --> 50uS */
//#define LOWLEVELDRIVERSCONFIG_MRT_2_INTR_FUNCTION											/**< Define if higherlevel interrupt handler should be specified */

/* do not modify under this line */
/* ******************************************************************************* */
#ifdef LOWLEVELDRIVERSCONFIG_MRT_2_INTR_FUNCTION
extern void LOWLEVELDRIVERSCONFIG_MRT_2_INTR_FUNCTION(void);
#define LOWLEVELDRIVERSCONFIG_MRT_2_INTRHANDLER			&LOWLEVELDRIVERSCONFIG_MRT_2_INTR_FUNCTION		/**< Pointer to the high level TIMER16_0 handler */
#else
#define LOWLEVELDRIVERSCONFIG_MRT_2_INTRHANDLER			NULL
#endif
/* do not modify above this line */
/* ******************************************************************************* */

/*
 * mrt3 low level startup values
 * ***********************************************************
 */
#define LOWLEVELDRIVERSCONFIG_MRT_3_ENABLE					false							/**< this timer is disabled */
#define LOWLEVELDRIVERSCONFIG_MRT_3_ENABLEINTERRUPT			false							/**< interrupts disabled for this timer */
#define LOWLEVELDRIVERSCONFIG_MRT_3_INTERRUPTFREQ			20000							/**< 20000 --> 50uS */
//#define LOWLEVELDRIVERSCONFIG_MRT_3_INTR_FUNCTION											/**< Define if higherlevel interrupt handler should be specified */

/* do not modify under this line */
/* ******************************************************************************* */
#ifdef LOWLEVELDRIVERSCONFIG_MRT_3_INTR_FUNCTION
extern void LOWLEVELDRIVERSCONFIG_MRT_3_INTR_FUNCTION(void);
#define LOWLEVELDRIVERSCONFIG_MRT_3_INTRHANDLER			&LOWLEVELDRIVERSCONFIG_MRT_3_INTR_FUNCTION		/**< Pointer to the high level TIMER16_0 handler */
#else
#define LOWLEVELDRIVERSCONFIG_MRT_3_INTRHANDLER			NULL
#endif
/* do not modify above this line */
/* ******************************************************************************* */







/*
 * ***********************************************************************************************************************************************
 * Typedefs and enumerations
 * ***********************************************************************************************************************************************
 */


/*
 * ***********************************************************************************************************************************************
 * Public Function Prototypes
 * ***********************************************************************************************************************************************
 */



#endif
/* End of file lowleveldriversconfig.h */
